<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on xiaowenwen&#39;s blog</title>
    <link>https://xiaowenwen1995.github.io/tags/python/</link>
    <description>Recent content in Python on xiaowenwen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Feb 2020 13:55:44 +0800</lastBuildDate>
    
	<atom:link href="https://xiaowenwen1995.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scrapy整合selenium实现动态网络爬虫</title>
      <link>https://xiaowenwen1995.github.io/2020/02/scrapy%E6%95%B4%E5%90%88selenium%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</link>
      <pubDate>Thu, 27 Feb 2020 13:55:44 +0800</pubDate>
      
      <guid>https://xiaowenwen1995.github.io/2020/02/scrapy%E6%95%B4%E5%90%88selenium%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</guid>
      <description>&lt;p&gt;这两天用scrapy和selenium写爬虫，踩了一些坑，现记录一下。&lt;/p&gt;
&lt;p&gt;本文的重点主要介绍Scrapy架构和Scrapy框架爬取流程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中的闭包和装饰器</title>
      <link>https://xiaowenwen1995.github.io/2020/02/python%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85%E5%92%8C%E8%A3%85%E9%A5%B0%E5%99%A8/</link>
      <pubDate>Wed, 12 Feb 2020 14:23:09 +0800</pubDate>
      
      <guid>https://xiaowenwen1995.github.io/2020/02/python%E4%B8%AD%E7%9A%84%E9%97%AD%E5%8C%85%E5%92%8C%E8%A3%85%E9%A5%B0%E5%99%A8/</guid>
      <description>&lt;p&gt;之前一直对python中装饰器的概念比较模糊，今天阅读了一些相关的文章，现总结一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中lambda的用法</title>
      <link>https://xiaowenwen1995.github.io/2020/02/python%E4%B8%ADlambda%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 11 Feb 2020 16:26:38 +0800</pubDate>
      
      <guid>https://xiaowenwen1995.github.io/2020/02/python%E4%B8%ADlambda%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>&lt;p&gt;lambda表达式定义的函数为匿名函数，通常是在需要一个函数，但是又不想费神去命名一个函数的场合下使用。本文对Python中lambda表达式的特性和用法进行了一个简单的总结。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>